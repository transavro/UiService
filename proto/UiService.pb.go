// Code generated by protoc-gen-go. DO NOT EDIT.
// source: UiService.proto

package UiService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UiSpecReq struct {
	Vendor               string   `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Brand                string   `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	TvEmac               string   `protobuf:"bytes,3,opt,name=tvEmac,proto3" json:"tvEmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UiSpecReq) Reset()         { *m = UiSpecReq{} }
func (m *UiSpecReq) String() string { return proto.CompactTextString(m) }
func (*UiSpecReq) ProtoMessage()    {}
func (*UiSpecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d23c27282653b360, []int{0}
}

func (m *UiSpecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UiSpecReq.Unmarshal(m, b)
}
func (m *UiSpecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UiSpecReq.Marshal(b, m, deterministic)
}
func (m *UiSpecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UiSpecReq.Merge(m, src)
}
func (m *UiSpecReq) XXX_Size() int {
	return xxx_messageInfo_UiSpecReq.Size(m)
}
func (m *UiSpecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UiSpecReq.DiscardUnknown(m)
}

var xxx_messageInfo_UiSpecReq proto.InternalMessageInfo

func (m *UiSpecReq) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *UiSpecReq) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *UiSpecReq) GetTvEmac() string {
	if m != nil {
		return m.TvEmac
	}
	return ""
}

type Response struct {
	IsSuccessfull        bool     `protobuf:"varint,1,opt,name=isSuccessfull,proto3" json:"isSuccessfull,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d23c27282653b360, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetIsSuccessfull() bool {
	if m != nil {
		return m.IsSuccessfull
	}
	return false
}

func (m *Response) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

type UiSpec struct {
	AppList              []string             `protobuf:"bytes,1,rep,name=appList,proto3" json:"appList,omitempty"`
	SearchColor          string               `protobuf:"bytes,2,opt,name=searchColor,proto3" json:"searchColor,omitempty"`
	FastlaneColor        string               `protobuf:"bytes,3,opt,name=fastlaneColor,proto3" json:"fastlaneColor,omitempty"`
	FocusColor           string               `protobuf:"bytes,4,opt,name=focusColor,proto3" json:"focusColor,omitempty"`
	HasFastlane          bool                 `protobuf:"varint,5,opt,name=hasFastlane,proto3" json:"hasFastlane,omitempty"`
	HasCarousel          bool                 `protobuf:"varint,6,opt,name=hasCarousel,proto3" json:"hasCarousel,omitempty"`
	AboutUsUrl           string               `protobuf:"bytes,7,opt,name=aboutUsUrl,proto3" json:"aboutUsUrl,omitempty"`
	BrandLogoUrl         string               `protobuf:"bytes,8,opt,name=brandLogoUrl,proto3" json:"brandLogoUrl,omitempty"`
	HelpUrl              string               `protobuf:"bytes,9,opt,name=helpUrl,proto3" json:"helpUrl,omitempty"`
	ActivatedStatus      bool                 `protobuf:"varint,10,opt,name=activatedStatus,proto3" json:"activatedStatus,omitempty"`
	Vendor               string               `protobuf:"bytes,11,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Brand                string               `protobuf:"bytes,12,opt,name=brand,proto3" json:"brand,omitempty"`
	Gradient             []string             `protobuf:"bytes,13,rep,name=gradient,proto3" json:"gradient,omitempty"`
	BgImageUrl           string               `protobuf:"bytes,16,opt,name=bgImageUrl,proto3" json:"bgImageUrl,omitempty"`
	FontUrl              string               `protobuf:"bytes,17,opt,name=fontUrl,proto3" json:"fontUrl,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *UiSpec) Reset()         { *m = UiSpec{} }
func (m *UiSpec) String() string { return proto.CompactTextString(m) }
func (*UiSpec) ProtoMessage()    {}
func (*UiSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_d23c27282653b360, []int{2}
}

func (m *UiSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UiSpec.Unmarshal(m, b)
}
func (m *UiSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UiSpec.Marshal(b, m, deterministic)
}
func (m *UiSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UiSpec.Merge(m, src)
}
func (m *UiSpec) XXX_Size() int {
	return xxx_messageInfo_UiSpec.Size(m)
}
func (m *UiSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_UiSpec.DiscardUnknown(m)
}

var xxx_messageInfo_UiSpec proto.InternalMessageInfo

func (m *UiSpec) GetAppList() []string {
	if m != nil {
		return m.AppList
	}
	return nil
}

func (m *UiSpec) GetSearchColor() string {
	if m != nil {
		return m.SearchColor
	}
	return ""
}

func (m *UiSpec) GetFastlaneColor() string {
	if m != nil {
		return m.FastlaneColor
	}
	return ""
}

func (m *UiSpec) GetFocusColor() string {
	if m != nil {
		return m.FocusColor
	}
	return ""
}

func (m *UiSpec) GetHasFastlane() bool {
	if m != nil {
		return m.HasFastlane
	}
	return false
}

func (m *UiSpec) GetHasCarousel() bool {
	if m != nil {
		return m.HasCarousel
	}
	return false
}

func (m *UiSpec) GetAboutUsUrl() string {
	if m != nil {
		return m.AboutUsUrl
	}
	return ""
}

func (m *UiSpec) GetBrandLogoUrl() string {
	if m != nil {
		return m.BrandLogoUrl
	}
	return ""
}

func (m *UiSpec) GetHelpUrl() string {
	if m != nil {
		return m.HelpUrl
	}
	return ""
}

func (m *UiSpec) GetActivatedStatus() bool {
	if m != nil {
		return m.ActivatedStatus
	}
	return false
}

func (m *UiSpec) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *UiSpec) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *UiSpec) GetGradient() []string {
	if m != nil {
		return m.Gradient
	}
	return nil
}

func (m *UiSpec) GetBgImageUrl() string {
	if m != nil {
		return m.BgImageUrl
	}
	return ""
}

func (m *UiSpec) GetFontUrl() string {
	if m != nil {
		return m.FontUrl
	}
	return ""
}

func (m *UiSpec) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UiSpec) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*UiSpecReq)(nil), "UiService.UiSpecReq")
	proto.RegisterType((*Response)(nil), "UiService.Response")
	proto.RegisterType((*UiSpec)(nil), "UiService.UiSpec")
}

func init() { proto.RegisterFile("UiService.proto", fileDescriptor_d23c27282653b360) }

var fileDescriptor_d23c27282653b360 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcf, 0x6e, 0x13, 0x3f,
	0x10, 0xd6, 0xa6, 0x6d, 0x9a, 0x38, 0x6d, 0xd3, 0xba, 0x7f, 0xe4, 0xdf, 0xfe, 0x10, 0x44, 0x2b,
	0x0e, 0x11, 0x87, 0x04, 0x95, 0x0b, 0xe2, 0x06, 0x15, 0x20, 0xa4, 0x22, 0xc4, 0x86, 0x20, 0xd1,
	0x03, 0x92, 0xe3, 0xcc, 0x6e, 0x2c, 0x6d, 0xec, 0xc5, 0xf6, 0xe6, 0x01, 0x78, 0x05, 0xde, 0x80,
	0x07, 0xe2, 0xc2, 0x2b, 0xf0, 0x20, 0xc8, 0xf6, 0x6e, 0x76, 0x93, 0x46, 0xe2, 0x38, 0xdf, 0x7c,
	0xf3, 0xf9, 0x9b, 0xf1, 0x0c, 0xea, 0x4f, 0xf9, 0x04, 0xd4, 0x8a, 0x33, 0x18, 0xe5, 0x4a, 0x1a,
	0x89, 0xbb, 0x6b, 0x20, 0x7c, 0x94, 0x4a, 0x99, 0x66, 0x30, 0x76, 0x89, 0x59, 0x91, 0x8c, 0x0d,
	0x5f, 0x82, 0x36, 0x74, 0x99, 0x7b, 0x6e, 0xf8, 0xa0, 0x24, 0xd0, 0x9c, 0x8f, 0xa9, 0x10, 0xd2,
	0x50, 0xc3, 0xa5, 0xd0, 0x3e, 0x1b, 0x7d, 0x44, 0x56, 0x2b, 0x07, 0x16, 0xc3, 0x37, 0x7c, 0x85,
	0xda, 0x2b, 0x10, 0x73, 0xa9, 0x48, 0x30, 0x08, 0x86, 0xdd, 0xb8, 0x8c, 0xf0, 0x05, 0x3a, 0x98,
	0x29, 0x2a, 0xe6, 0xa4, 0xe5, 0x60, 0x1f, 0x58, 0xb6, 0x59, 0xbd, 0x5e, 0x52, 0x46, 0xf6, 0x3c,
	0xdb, 0x47, 0xd1, 0x1d, 0xea, 0xc4, 0xa0, 0x73, 0x29, 0x34, 0xe0, 0xc7, 0xe8, 0x98, 0xeb, 0x49,
	0xc1, 0x18, 0x68, 0x9d, 0x14, 0x59, 0xe6, 0x84, 0x3b, 0xf1, 0x26, 0x88, 0x87, 0xa8, 0xaf, 0xca,
	0x8a, 0xf7, 0xa0, 0x35, 0x4d, 0xa1, 0x7c, 0x69, 0x1b, 0x8e, 0x7e, 0xed, 0xa3, 0xb6, 0xf7, 0x8b,
	0x09, 0x3a, 0xa4, 0x79, 0x7e, 0xcb, 0xb5, 0x21, 0xc1, 0x60, 0x6f, 0xd8, 0x8d, 0xab, 0x10, 0x0f,
	0x50, 0x4f, 0x03, 0x55, 0x6c, 0x71, 0x23, 0x33, 0xa9, 0x4a, 0xa9, 0x26, 0x64, 0x6d, 0x25, 0x54,
	0x9b, 0x8c, 0x0a, 0xf0, 0x1c, 0xdf, 0xc1, 0x26, 0x88, 0x1f, 0x22, 0x94, 0x48, 0x56, 0x68, 0x4f,
	0xd9, 0x77, 0x94, 0x06, 0x62, 0xdf, 0x59, 0x50, 0xfd, 0xa6, 0xac, 0x21, 0x07, 0xae, 0xb5, 0x26,
	0x54, 0x32, 0x6e, 0xa8, 0x92, 0x85, 0x86, 0x8c, 0xb4, 0xd7, 0x8c, 0x0a, 0xb2, 0x6f, 0xd0, 0x99,
	0x2c, 0xcc, 0x54, 0x4f, 0x55, 0x46, 0x0e, 0xfd, 0x1b, 0x35, 0x82, 0x23, 0x74, 0xe4, 0xa6, 0x7d,
	0x2b, 0x53, 0x69, 0x19, 0x1d, 0xc7, 0xd8, 0xc0, 0xec, 0x24, 0x16, 0x90, 0xe5, 0x36, 0xdd, 0x75,
	0xe9, 0x2a, 0xb4, 0x83, 0xa5, 0xcc, 0xf0, 0x15, 0x35, 0x30, 0x9f, 0x18, 0x6a, 0x0a, 0x4d, 0x90,
	0xf3, 0xb0, 0x0d, 0x37, 0xbe, 0xbe, 0xb7, 0xfb, 0xeb, 0x8f, 0x9a, 0x5f, 0x1f, 0xa2, 0x4e, 0xaa,
	0xe8, 0x9c, 0x83, 0x30, 0xe4, 0xd8, 0x0d, 0x7f, 0x1d, 0xdb, 0x8e, 0x66, 0xe9, 0xbb, 0x25, 0x4d,
	0xc1, 0x1a, 0x3a, 0xf5, 0x1d, 0xd5, 0x88, 0x75, 0x9b, 0x48, 0x61, 0x6c, 0xf2, 0xcc, 0xbb, 0x2d,
	0x43, 0xfc, 0x1c, 0x75, 0x99, 0x02, 0x6b, 0xea, 0xa5, 0x21, 0x27, 0x83, 0x60, 0xd8, 0xbb, 0x0e,
	0x47, 0x7e, 0x7b, 0x47, 0xd5, 0x7a, 0x8f, 0x3e, 0x55, 0xeb, 0x1d, 0xd7, 0x64, 0x5b, 0x59, 0xe4,
	0xf3, 0xb2, 0xb2, 0xff, 0xef, 0xca, 0x35, 0xf9, 0xfa, 0x67, 0x0b, 0xd5, 0xc7, 0x84, 0xbf, 0xa2,
	0xab, 0xb7, 0x60, 0x3e, 0xbb, 0xd6, 0xed, 0x92, 0xf1, 0x84, 0x33, 0x77, 0x2e, 0xf8, 0x62, 0x54,
	0xdf, 0xe0, 0xfa, 0x60, 0xc2, 0xb3, 0x7b, 0x68, 0xf4, 0xdf, 0xf7, 0xdf, 0x7f, 0x7e, 0xb4, 0xce,
	0xa3, 0x93, 0x71, 0x0a, 0xc6, 0x0f, 0x51, 0xe7, 0xc0, 0x5e, 0x04, 0x4f, 0x9e, 0x06, 0xf8, 0x0e,
	0x5d, 0xc6, 0x90, 0x72, 0x6d, 0x40, 0x7d, 0x50, 0x53, 0x67, 0xe2, 0x95, 0x1b, 0xe8, 0x7d, 0xa1,
	0xf0, 0xbc, 0x01, 0x55, 0xf7, 0xd4, 0x50, 0x57, 0x90, 0x6e, 0xa8, 0xe3, 0x2f, 0xa8, 0x3f, 0x15,
	0x95, 0xba, 0x57, 0xdd, 0x6d, 0x7a, 0xa7, 0xf0, 0xff, 0x4e, 0xf8, 0x32, 0x3a, 0x1d, 0x17, 0x62,
	0x5b, 0x7a, 0xd6, 0x76, 0x33, 0x7c, 0xf6, 0x37, 0x00, 0x00, 0xff, 0xff, 0x61, 0xf6, 0x60, 0xeb,
	0x88, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UiServiceClient is the client API for UiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UiServiceClient interface {
	GetVendorSpecification(ctx context.Context, in *UiSpecReq, opts ...grpc.CallOption) (UiService_GetVendorSpecificationClient, error)
	RegisterOrUpdateBrand(ctx context.Context, in *UiSpec, opts ...grpc.CallOption) (*Response, error)
	UnRegisterBrand(ctx context.Context, in *UiSpecReq, opts ...grpc.CallOption) (*Response, error)
}

type uiServiceClient struct {
	cc *grpc.ClientConn
}

func NewUiServiceClient(cc *grpc.ClientConn) UiServiceClient {
	return &uiServiceClient{cc}
}

func (c *uiServiceClient) GetVendorSpecification(ctx context.Context, in *UiSpecReq, opts ...grpc.CallOption) (UiService_GetVendorSpecificationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UiService_serviceDesc.Streams[0], "/UiService.UiService/GetVendorSpecification", opts...)
	if err != nil {
		return nil, err
	}
	x := &uiServiceGetVendorSpecificationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UiService_GetVendorSpecificationClient interface {
	Recv() (*UiSpec, error)
	grpc.ClientStream
}

type uiServiceGetVendorSpecificationClient struct {
	grpc.ClientStream
}

func (x *uiServiceGetVendorSpecificationClient) Recv() (*UiSpec, error) {
	m := new(UiSpec)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *uiServiceClient) RegisterOrUpdateBrand(ctx context.Context, in *UiSpec, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/UiService.UiService/RegisterOrUpdateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uiServiceClient) UnRegisterBrand(ctx context.Context, in *UiSpecReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/UiService.UiService/UnRegisterBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UiServiceServer is the server API for UiService service.
type UiServiceServer interface {
	GetVendorSpecification(*UiSpecReq, UiService_GetVendorSpecificationServer) error
	RegisterOrUpdateBrand(context.Context, *UiSpec) (*Response, error)
	UnRegisterBrand(context.Context, *UiSpecReq) (*Response, error)
}

// UnimplementedUiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUiServiceServer struct {
}

func (*UnimplementedUiServiceServer) GetVendorSpecification(req *UiSpecReq, srv UiService_GetVendorSpecificationServer) error {
	return status.Errorf(codes.Unimplemented, "method GetVendorSpecification not implemented")
}
func (*UnimplementedUiServiceServer) RegisterOrUpdateBrand(ctx context.Context, req *UiSpec) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterOrUpdateBrand not implemented")
}
func (*UnimplementedUiServiceServer) UnRegisterBrand(ctx context.Context, req *UiSpecReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnRegisterBrand not implemented")
}

func RegisterUiServiceServer(s *grpc.Server, srv UiServiceServer) {
	s.RegisterService(&_UiService_serviceDesc, srv)
}

func _UiService_GetVendorSpecification_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UiSpecReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UiServiceServer).GetVendorSpecification(m, &uiServiceGetVendorSpecificationServer{stream})
}

type UiService_GetVendorSpecificationServer interface {
	Send(*UiSpec) error
	grpc.ServerStream
}

type uiServiceGetVendorSpecificationServer struct {
	grpc.ServerStream
}

func (x *uiServiceGetVendorSpecificationServer) Send(m *UiSpec) error {
	return x.ServerStream.SendMsg(m)
}

func _UiService_RegisterOrUpdateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UiSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UiServiceServer).RegisterOrUpdateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UiService.UiService/RegisterOrUpdateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UiServiceServer).RegisterOrUpdateBrand(ctx, req.(*UiSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _UiService_UnRegisterBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UiSpecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UiServiceServer).UnRegisterBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UiService.UiService/UnRegisterBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UiServiceServer).UnRegisterBrand(ctx, req.(*UiSpecReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UiService.UiService",
	HandlerType: (*UiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterOrUpdateBrand",
			Handler:    _UiService_RegisterOrUpdateBrand_Handler,
		},
		{
			MethodName: "UnRegisterBrand",
			Handler:    _UiService_UnRegisterBrand_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetVendorSpecification",
			Handler:       _UiService_GetVendorSpecification_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "UiService.proto",
}
